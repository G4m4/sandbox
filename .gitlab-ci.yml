# As seen on https://gitlab.com/gitlab-examples/cpp-example/-/blob/master/.gitlab-ci.yml

stages:
  - lint
  - build
  - test
  # - deploy

lint:linux:
  stage: lint
  image: xianpengshen/clang-tools:18
  before_script:
    - apt update && apt -y install clang git ninja-build cmake iwyu
  cache:
    - key: cpm_cache
      paths:
      - cpm_cache/
  variables:
    CPM_SOURCE_CACHE: "cpm_cache"
  script:
    - cmake --preset x64-linux-debug
    - cmake --build --preset x64-linux-debug --target sandbox_lib_analysis | tee analysis.log
    - chmod +x ./scripts/analyse_log.sh && /bin/sh ./scripts/analyse_log.sh analysis.log warnings.log
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  artifacts:
    expire_in: 2 days
    paths:
      - analysis.log
      - warnings.log

build:linux:
  stage: build
  image: gcc
  # tags:
  #   - linux
  before_script:
    - apt update && apt -y install make autoconf ninja-build cmake
  cache:
    - key: cpm_cache
      paths:
      - cpm_cache/
  variables:
    CPM_SOURCE_CACHE: "cpm_cache"
  script:
    - cmake --preset x64-linux-ci
    - cmake --build --preset x64-linux-ci --target install
  artifacts:
    expire_in: 2 hrs
    paths:
      - out/install/x64-linux-ci/

# build:windows:
#   stage: build
#   tags:
#     - windows
#   script:
#     - mkdir build
#     - cd build
#     - '"C:\Program Files\CMake\bin\cmake.exe" -G "Visual Studio 15 2017 Win64" -DBUILD_LIBTIFF=ON ..'
#     - '"C:\Program Files\CMake\bin\cmake.exe" ..'
#     - '"C:\Program Files\CMake\bin\cmake.exe" --build . --config Release --target ALL_BUILD'
#   artifacts:
#     expire_in: 2 hrs
#     paths:
#       - build/

# Run unit test
test:linux:
  stage: test
  image: gcc
  # tags:
  #   - linux
  script:
    - ./out/install/x64-linux-ci/bin/sandbox_test
  dependencies:
    - build:linux

# # Build and Push Docker Image
# build:docker:
#   stage: deploy
#   when: on_success
#   only:
#     - master
#   image: docker:stable
#   services:
#     - docker:dind
#   script:
#     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#     - docker build -t $CI_REGISTRY_IMAGE .
#     - docker push $CI_REGISTRY_IMAGE
#   dependencies:
#     - build:linux
